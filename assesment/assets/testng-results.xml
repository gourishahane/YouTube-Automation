<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-09T08:14:47Z" name="Test Suite for Buildout" finished-at="2024-10-09T08:15:49Z" duration-ms="62374">
    <groups>
    </groups>
    <test started-at="2024-10-09T08:14:47Z" name="Test Cases for Buildout" finished-at="2024-10-09T08:15:49Z" duration-ms="62374">
      <class name="demo.TestCases">
        <test-method is-config="true" signature="startBrowser()[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:44:47Z" name="startBrowser" finished-at="2024-10-09T13:44:50Z" duration-ms="3016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startBrowser -->
        <test-method signature="testCase01()[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:44:50Z" name="testCase01" finished-at="2024-10-09T13:44:55Z" duration-ms="5038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase01 -->
        <test-method signature="testCase02()[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:44:55Z" name="testCase02" finished-at="2024-10-09T13:45:10Z" duration-ms="15177" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	The movie is not marked as Mature ('A'). expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	The movie is not marked as Mature ('A'). expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at demo.TestCases.testCase02(TestCases.java:138)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:146)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:91)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase02 -->
        <test-method signature="testCase03()[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:45:10Z" name="testCase03" finished-at="2024-10-09T13:45:26Z" duration-ms="15538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase03 -->
        <test-method signature="testCase04()[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:45:26Z" name="testCase04" finished-at="2024-10-09T13:45:28Z" duration-ms="2279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase04 -->
        <test-method signature="testCase05(java.lang.String)[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:45:29Z" name="testCase05" data-provider="excelData" finished-at="2024-10-09T13:45:35Z" duration-ms="6648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Movies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase05 -->
        <test-method signature="testCase05(java.lang.String)[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:45:35Z" name="testCase05" data-provider="excelData" finished-at="2024-10-09T13:45:42Z" duration-ms="6419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Music]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase05 -->
        <test-method signature="testCase05(java.lang.String)[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:45:42Z" name="testCase05" data-provider="excelData" finished-at="2024-10-09T13:45:48Z" duration-ms="6495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Games]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase05 -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:demo.TestCases@63fdab07]" started-at="2024-10-09T13:45:48Z" name="endTest" finished-at="2024-10-09T13:45:49Z" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- demo.TestCases -->
    </test> <!-- Test Cases for Buildout -->
  </suite> <!-- Test Suite for Buildout -->
</testng-results>
